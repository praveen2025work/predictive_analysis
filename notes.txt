-- Corrected query to get hierarchy levels with workflow process data
-- Fixed: uem.HIERARCHY_LEVEL -> uem.HIERARCHYLEVEL
-- Added: Join with WORKFLOW_PROCESS on APP_GROUP_ID

WITH hierarchy_pivot AS (
    SELECT 
        uem.APP_ID,
        uem.USERNAME,
        uem.HIERARCHY_ID,
        h.HIERARCHYNAME,
        -- Get all hierarchy levels for this user's entitlement
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 1 THEN hd.COLNAME END) as LEVEL1_COLNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 1 THEN hd.COLVALUE END) as LEVEL1_VALUE,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 2 THEN hd.COLNAME END) as LEVEL2_COLNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 2 THEN hd.COLVALUE END) as LEVEL2_VALUE,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 3 THEN hd.COLNAME END) as LEVEL3_COLNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 3 THEN hd.COLVALUE END) as LEVEL3_VALUE,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 4 THEN hd.COLNAME END) as LEVEL4_COLNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 4 THEN hd.COLVALUE END) as LEVEL4_VALUE,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 5 THEN hd.COLNAME END) as LEVEL5_COLNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 5 THEN hd.COLVALUE END) as LEVEL5_VALUE,
        -- Get the workflow instance value (last level value)
        MAX(CASE WHEN hd.HIERARCHYLEVEL = uem.HIERARCHYLEVEL THEN hd.COLVALUE END) as WORKFLOW_INSTANCE_VALUE,
        uem.HIERARCHYLEVEL as MAX_USER_LEVEL
    FROM WORKFLOW_USER_ENTITLEMENT_MAP uem
    INNER JOIN WORKFLOW_HIERARCHY h ON uem.HIERARCHY_ID = h.HIERARCHY_ID
    INNER JOIN WORKFLOW_HIERARCHY_DATA hd ON h.HIERARCHY_ID = hd.HIERARCHY_ID
    WHERE uem.USERNAME = :username
      AND (:app_id IS NULL OR uem.APP_ID = :app_id)
      AND h.STARTDATE <= SYSTIMESTAMP
      AND h.EXPIRYDATE > SYSTIMESTAMP
      AND hd.STARTDATE <= SYSTIMESTAMP
      AND hd.EXPIRYDATE > SYSTIMESTAMP
      AND hd.ISACTIVE = 1
      AND hd.HIERARCHYLEVEL <= uem.HIERARCHYLEVEL  -- Only levels up to user's access
    -- Build hierarchy path from root to user's accessible level
    START WITH hd.HIERARCHYLEVEL = 1
    CONNECT BY PRIOR hd.HIERARCHYLEVEL = hd.PARENTHIERARCHYLEVEL
           AND PRIOR hd.COLVALUE = hd.PARENTCOLVALUE
           AND PRIOR hd.HIERARCHY_ID = hd.HIERARCHY_ID
    GROUP BY 
        uem.APP_ID,
        uem.USERNAME,
        uem.HIERARCHY_ID,
        h.HIERARCHYNAME,
        uem.HIERARCHYLEVEL
)
SELECT 
    hp.APP_ID,
    hp.USERNAME,
    hp.LEVEL1_COLNAME,
    hp.LEVEL1_VALUE,
    hp.LEVEL2_COLNAME,
    hp.LEVEL2_VALUE,
    hp.LEVEL3_COLNAME,
    hp.LEVEL3_VALUE,
    hp.LEVEL4_COLNAME,
    hp.LEVEL4_VALUE,
    hp.LEVEL5_COLNAME,
    hp.LEVEL5_VALUE,
    hp.WORKFLOW_INSTANCE_VALUE,
    hp.MAX_USER_LEVEL,
    -- All WORKFLOW_PROCESS data
    wp.WORKFLOW_PROCESS_ID,
    wp.STATUS,
    wp.BUSINESSDATE,
    wp.WORKFLOW_APP_CONFIG_ID,
    wp.APP_GROUP_ID,
    wp.STAGE_ID,
    wp.SUBSTAGE_ID,
    wp.DEP_SUB_STAGE_SEQ,
    wp.AUTO,
    wp.ATTEST,
    wp.UPLOAD,
    wp.ISFORCESTART,
    wp.ISRERUN,
    wp.UPDATEDBY,
    wp.UPDATEDON,
    wp.ATTESTEDBY,
    wp.ATTESTEDON,
    wp.COMPLETEDBY,
    wp.COMPLETEDON,
    wp.DURATION,
    wp.MESSAGE,
    wp.ENTITLEMENT_MAPPING,
    wp.APPROVAL,
    wp.ISLOCKED,
    wp.LOCKEDBY,
    wp.LOCKEDON,
    wp.ISACTIVE as PROCESS_ISACTIVE,
    wp.ADHOC,
    wp.ISALTERYX,
    -- Additional useful fields
    wa.NAME as APPLICATION_NAME,
    ws.NAME as STAGE_NAME,
    wss.NAME as SUBSTAGE_NAME
FROM hierarchy_pivot hp
INNER JOIN WORKFLOW_PROCESS wp ON hp.APP_ID = wp.APP_ID
                                AND TO_NUMBER(hp.WORKFLOW_INSTANCE_VALUE) = wp.APP_GROUP_ID
LEFT JOIN WORKFLOW_APPLICATION wa ON hp.APP_ID = wa.APP_ID
LEFT JOIN WORKFLOW_STAGE ws ON wp.STAGE_ID = ws.STAGE_ID
LEFT JOIN WORKFLOW_SUBSTAGE wss ON wp.SUBSTAGE_ID = wss.SUBSTAGE_ID
WHERE (:business_date IS NULL OR wp.BUSINESSDATE = :business_date)
ORDER BY 
    hp.APP_ID, 
    hp.USERNAME, 
    wp.APP_GROUP_ID, 
    wp.STAGE_ID, 
    wp.SUBSTAGE_ID,
    wp.DEP_SUB_STAGE_SEQ;

-- Alternative simpler query if you want specific business date and user
-- This is more performant for dashboard queries

SELECT 
    uem.APP_ID,
    uem.USERNAME,
    -- Level 1 (Root level)
    MAX(CASE WHEN hd.HIERARCHYLEVEL = 1 THEN hd.COLNAME END) as LEVEL1_COLNAME,
    MAX(CASE WHEN hd.HIERARCHYLEVEL = 1 THEN hd.COLVALUE END) as LEVEL1_VALUE,
    -- Level 2
    MAX(CASE WHEN hd.HIERARCHYLEVEL = 2 THEN hd.COLNAME END) as LEVEL2_COLNAME,
    MAX(CASE WHEN hd.HIERARCHYLEVEL = 2 THEN hd.COLVALUE END) as LEVEL2_VALUE,
    -- Workflow instance value (last accessible level)
    MAX(CASE WHEN hd.HIERARCHYLEVEL = uem.HIERARCHYLEVEL THEN hd.COLVALUE END) as WORKFLOW_INSTANCE_VALUE,
    -- Complete workflow process data
    wp.*,
    -- Additional metadata
    wa.NAME as APPLICATION_NAME,
    wa.DESCRIPTION as APPLICATION_DESCRIPTION,
    ws.NAME as STAGE_NAME,
    wss.NAME as SUBSTAGE_NAME,
    wss.COMPONENTNAME,
    wss.SERVICELINE
FROM WORKFLOW_USER_ENTITLEMENT_MAP uem
INNER JOIN WORKFLOW_HIERARCHY h ON uem.HIERARCHY_ID = h.HIERARCHY_ID
INNER JOIN WORKFLOW_HIERARCHY_DATA hd ON h.HIERARCHY_ID = hd.HIERARCHY_ID
INNER JOIN WORKFLOW_PROCESS wp ON uem.APP_ID = wp.APP_ID
                                AND TO_NUMBER(
                                    CASE WHEN hd.HIERARCHYLEVEL = uem.HIERARCHYLEVEL 
                                         THEN hd.COLVALUE 
                                    END
                                ) = wp.APP_GROUP_ID
LEFT JOIN WORKFLOW_APPLICATION wa ON uem.APP_ID = wa.APP_ID
LEFT JOIN WORKFLOW_STAGE ws ON wp.STAGE_ID = ws.STAGE_ID
LEFT JOIN WORKFLOW_SUBSTAGE wss ON wp.SUBSTAGE_ID = wss.SUBSTAGE_ID
WHERE uem.USERNAME = :username
  AND (:app_id IS NULL OR uem.APP_ID = :app_id)
  AND (:business_date IS NULL OR wp.BUSINESSDATE = :business_date)
  AND h.STARTDATE <= SYSTIMESTAMP
  AND h.EXPIRYDATE > SYSTIMESTAMP
  AND hd.STARTDATE <= SYSTIMESTAMP
  AND hd.EXPIRYDATE > SYSTIMESTAMP
  AND hd.ISACTIVE = 1
  AND hd.HIERARCHYLEVEL <= uem.HIERARCHYLEVEL
-- Build the complete hierarchy path
START WITH hd.HIERARCHYLEVEL = 1
CONNECT BY PRIOR hd.HIERARCHYLEVEL = hd.PARENTHIERARCHYLEVEL
       AND PRIOR hd.COLVALUE = hd.PARENTCOLVALUE
       AND PRIOR hd.HIERARCHY_ID = hd.HIERARCHY_ID
GROUP BY 
    uem.APP_ID,
    uem.USERNAME,
    uem.HIERARCHYLEVEL,
    wp.WORKFLOW_PROCESS_ID,
    wp.STATUS,
    wp.BUSINESSDATE,
    wp.WORKFLOW_APP_CONFIG_ID,
    wp.APP_GROUP_ID,
    wp.STAGE_ID,
    wp.SUBSTAGE_ID,
    wp.DEP_SUB_STAGE_SEQ,
    wp.AUTO,
    wp.ATTEST,
    wp.UPLOAD,
    wp.ISFORCESTART,
    wp.ISRERUN,
    wp.UPDATEDBY,
    wp.UPDATEDON,
    wp.ATTESTEDBY,
    wp.ATTESTEDON,
    wp.COMPLETEDBY,
    wp.COMPLETEDON,
    wp.DURATION,
    wp.MESSAGE,
    wp.ENTITLEMENT_MAPPING,
    wp.APPROVAL,
    wp.ISLOCKED,
    wp.LOCKEDBY,
    wp.LOCKEDON,
    wp.ISACTIVE,
    wp.ADHOC,
    wp.ISALTERYX,
    wa.NAME,
    wa.DESCRIPTION,
    ws.NAME,
    wss.NAME,
    wss.COMPONENTNAME,
    wss.SERVICELINE
ORDER BY 
    uem.APP_ID, 
    wp.APP_GROUP_ID, 
    wp.STAGE_ID, 
    wp.SUBSTAGE_ID,
    wp.DEP_SUB_STAGE_SEQ;

-- Query optimized for React Dashboard data loading
-- Returns data in format ready for UI consumption

SELECT 
    main_data.APP_ID,
    main_data.APPLICATION_NAME,
    main_data.USERNAME,
    main_data.LEVEL1_COLNAME,
    main_data.LEVEL1_VALUE,
    main_data.LEVEL2_COLNAME,
    main_data.LEVEL2_VALUE,
    main_data.WORKFLOW_INSTANCE_VALUE,
    -- Process summary for dashboard
    COUNT(*) as TOTAL_PROCESSES,
    COUNT(CASE WHEN main_data.STATUS = 'COMPLETED' THEN 1 END) as COMPLETED_COUNT,
    COUNT(CASE WHEN main_data.STATUS = 'IN_PROGRESS' THEN 1 END) as IN_PROGRESS_COUNT,
    COUNT(CASE WHEN main_data.STATUS = 'FAILED' THEN 1 END) as FAILED_COUNT,
    COUNT(CASE WHEN main_data.STATUS = 'NOT_STARTED' THEN 1 END) as NOT_STARTED_COUNT,
    -- Calculate completion percentage
    ROUND(
        (COUNT(CASE WHEN main_data.STATUS = 'COMPLETED' THEN 1 END) * 100.0 / COUNT(*)), 2
    ) as COMPLETION_PERCENTAGE,
    -- Recent activity
    MAX(main_data.UPDATEDON) as LAST_UPDATED,
    MAX(main_data.UPDATEDBY) as LAST_UPDATED_BY,
    -- JSON array of all processes for detailed view
    JSON_ARRAYAGG(
        JSON_OBJECT(
            'processId' VALUE main_data.WORKFLOW_PROCESS_ID,
            'status' VALUE main_data.STATUS,
            'stageName' VALUE main_data.STAGE_NAME,
            'substageName' VALUE main_data.SUBSTAGE_NAME,
            'isAuto' VALUE main_data.AUTO,
            'updatedBy' VALUE main_data.UPDATEDBY,
            'updatedOn' VALUE main_data.UPDATEDON,
            'duration' VALUE main_data.DURATION,
            'message' VALUE main_data.MESSAGE
        ) ORDER BY main_data.STAGE_ID, main_data.SUBSTAGE_ID, main_data.DEP_SUB_STAGE_SEQ
    ) as PROCESS_DETAILS
FROM (
    SELECT 
        uem.APP_ID,
        wa.NAME as APPLICATION_NAME,
        uem.USERNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 1 THEN hd.COLNAME END) as LEVEL1_COLNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 1 THEN hd.COLVALUE END) as LEVEL1_VALUE,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 2 THEN hd.COLNAME END) as LEVEL2_COLNAME,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = 2 THEN hd.COLVALUE END) as LEVEL2_VALUE,
        MAX(CASE WHEN hd.HIERARCHYLEVEL = uem.HIERARCHYLEVEL THEN hd.COLVALUE END) as WORKFLOW_INSTANCE_VALUE,
        wp.WORKFLOW_PROCESS_ID,
        wp.STATUS,
        wp.STAGE_ID,
        wp.SUBSTAGE_ID,
        wp.AUTO,
        wp.UPDATEDBY,
        wp.UPDATEDON,
        wp.DURATION,
        wp.MESSAGE,
        ws.NAME as STAGE_NAME,
        wss.NAME as SUBSTAGE_NAME,
        wp.DEP_SUB_STAGE_SEQ
    FROM WORKFLOW_USER_ENTITLEMENT_MAP uem
    INNER JOIN WORKFLOW_HIERARCHY h ON uem.HIERARCHY_ID = h.HIERARCHY_ID
    INNER JOIN WORKFLOW_HIERARCHY_DATA hd ON h.HIERARCHY_ID = hd.HIERARCHY_ID
    INNER JOIN WORKFLOW_PROCESS wp ON uem.APP_ID = wp.APP_ID
    INNER JOIN WORKFLOW_APPLICATION wa ON uem.APP_ID = wa.APP_ID
    LEFT JOIN WORKFLOW_STAGE ws ON wp.STAGE_ID = ws.STAGE_ID
    LEFT JOIN WORKFLOW_SUBSTAGE wss ON wp.SUBSTAGE_ID = wss.SUBSTAGE_ID
    WHERE uem.USERNAME = :username
      AND (:app_id IS NULL OR uem.APP_ID = :app_id)
      AND (:business_date IS NULL OR wp.BUSINESSDATE = :business_date)
      AND TO_NUMBER(hd.COLVALUE) = wp.APP_GROUP_ID
      AND hd.HIERARCHYLEVEL = uem.HIERARCHYLEVEL  -- Only the deepest level
      AND h.STARTDATE <= SYSTIMESTAMP
      AND h.EXPIRYDATE > SYSTIMESTAMP
      AND hd.STARTDATE <= SYSTIMESTAMP
      AND hd.EXPIRYDATE > SYSTIMESTAMP
      AND hd.ISACTIVE = 1
    GROUP BY 
        uem.APP_ID, wa.NAME, uem.USERNAME, uem.HIERARCHYLEVEL,
        wp.WORKFLOW_PROCESS_ID, wp.STATUS, wp.STAGE_ID, wp.SUBSTAGE_ID,
        wp.AUTO, wp.UPDATEDBY, wp.UPDATEDON, wp.DURATION, wp.MESSAGE,
        ws.NAME, wss.NAME, wp.DEP_SUB_STAGE_SEQ
) main_data
GROUP BY 
    main_data.APP_ID,
    main_data.APPLICATION_NAME,
    main_data.USERNAME,
    main_data.LEVEL1_COLNAME,
    main_data.LEVEL1_VALUE,
    main_data.LEVEL2_COLNAME,
    main_data.LEVEL2_VALUE,
    main_data.WORKFLOW_INSTANCE_VALUE
ORDER BY 
    main_data.APP_ID, 
    main_data.WORKFLOW_INSTANCE_VALUE;
